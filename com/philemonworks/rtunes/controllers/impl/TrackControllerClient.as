package com.philemonworks.rtunes.controllers.impl
{
	// TrackControllerClient is generated by Pocogese FlexGenerator on Mon, 23 Jul 2007 18:06:15 GMT

	import com.philemonworks.flex.net.Command;
	import com.philemonworks.flex.net.RestClient;
	import com.philemonworks.rtunes.controllers.api.TrackController;
	
	public class TrackControllerClient implements com.philemonworks.rtunes.controllers.api.TrackController {
		private var _baseURL:String;
		
		/**
		 * Constructor
		 */
		public function TrackControllerClient(baseURL:String = "") {
			super()
			this._baseURL = baseURL
		}	
		/**
		 * Command API function. The _replyReceivedHandler function (optional) will be called with a Reply object 
		 */
		public function destroy(id:String,_replyReceivedHandler:Function = null):void {
			trace('TrackController#destroy(id)')
			var _cmd:Command = new Command("destroy")
			_cmd.setParameter("id",id)				
			new RestClient("e4x").send_post(_cmd.toXML(),this._baseURL + "track/doCommand",_replyReceivedHandler)
		}
		/**
		 * Command API function. The _replyReceivedHandler function (optional) will be called with a Reply object 
		 */
		public function saveOrUpdate(recordXML:String,_replyReceivedHandler:Function = null):void {
			trace('TrackController#saveOrUpdate(recordXML)')
			var _cmd:Command = new Command("saveOrUpdate")
			_cmd.setParameter("recordXML",recordXML)				
			new RestClient("e4x").send_post(_cmd.toXML(),this._baseURL + "track/doCommand",_replyReceivedHandler)
		}

		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find(id:String,_xmlReceivedHandler:Function):void {
			trace('TrackController#find(id)')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find?"  + "id=" + id
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function findAll(_xmlReceivedHandler:Function):void {
			trace('TrackController#findAll()')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/findAll?" 
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find_all_albums(_xmlReceivedHandler:Function):void {
			trace('TrackController#find_all_albums()')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find_all_albums?" 
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find_all_artists(_xmlReceivedHandler:Function):void {
			trace('TrackController#find_all_artists()')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find_all_artists?" 
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find_all_by_album(album:String,_xmlReceivedHandler:Function):void {
			trace('TrackController#find_all_by_album(album)')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find_all_by_album?"  + "album=" + album
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find_all_by_artist(artist:String,_xmlReceivedHandler:Function):void {
			trace('TrackController#find_all_by_artist(artist)')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find_all_by_artist?"  + "artist=" + artist
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find_all_by_genre(genre:String,_xmlReceivedHandler:Function):void {
			trace('TrackController#find_all_by_genre(genre)')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find_all_by_genre?"  + "genre=" + genre
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function find_all_genres(_xmlReceivedHandler:Function):void {
			trace('TrackController#find_all_genres()')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/find_all_genres?" 
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
		/**
		 * Selection API function.  _xmlReceivedHandler is called with an XML object
		 */
		public function listPage(from:String,to:String,sortkey:String,sortmethod:String,_xmlReceivedHandler:Function):void {
			trace('TrackController#listPage(from,to,sortkey,sortmethod)')
			// Need to apply URL encoding here (once i found out how!)
			var _urn:String = "track/doSelection/listPage?"  + "from=" + from + "&to=" + to + "&sortkey=" + sortkey + "&sortmethod=" + sortmethod
			new RestClient("e4x").send_get(this._baseURL + _urn,_xmlReceivedHandler)
		}
	
	}
}